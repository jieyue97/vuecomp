(window.webpackJsonp=window.webpackJsonp||[]).push([[115],{1182:function(e,n,t){"use strict";t.r(n);var a=t(27),i=Object(a.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"如何获取-bean-实例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何获取-bean-实例"}},[e._v("#")]),e._v(" 如何获取 bean 实例?")]),e._v(" "),t("p",[e._v("bean 是计算机自动生成的类，bean 是一个由 Spring IoC 容器实例化、组装和管理的对象。也就是说，bean 并不是程序员编辑的，而是程序运行时，由 spring 通过反射生成的。")]),e._v(" "),t("p",[e._v("bean 和类是什么关系？")]),e._v(" "),t("p",[e._v("一个 bean 对应一个类,它们是一对一的。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v(" @Resource\n  private IRedisDictCleanClient redisDictCleanClient;\n\n IRedisDictCleanClient iRedisDictCleanClient = (iRedisDictCleanClient) SpringUtil.getBean(iRedisDictCleanClient.class);\n")])])])])}),[],!1,null,null,null);n.default=i.exports}}]);